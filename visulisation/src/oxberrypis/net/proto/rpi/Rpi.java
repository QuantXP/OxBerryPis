// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oxberrypis/net/proto/rpi.proto

package oxberrypis.net.proto.rpi;

public final class Rpi {
  private Rpi() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface StockEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 stock_id = 1;
    /**
     * <code>required int32 stock_id = 1;</code>
     */
    boolean hasStockId();
    /**
     * <code>required int32 stock_id = 1;</code>
     */
    int getStockId();

    // required int32 timestamp = 2;
    /**
     * <code>required int32 timestamp = 2;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required int32 timestamp = 2;</code>
     */
    int getTimestamp();

    // required int32 pi_id = 3;
    /**
     * <code>required int32 pi_id = 3;</code>
     */
    boolean hasPiId();
    /**
     * <code>required int32 pi_id = 3;</code>
     */
    int getPiId();

    // required int32 seq_num = 4;
    /**
     * <code>required int32 seq_num = 4;</code>
     */
    boolean hasSeqNum();
    /**
     * <code>required int32 seq_num = 4;</code>
     */
    int getSeqNum();

    // optional int32 top_buy_price = 5;
    /**
     * <code>optional int32 top_buy_price = 5;</code>
     */
    boolean hasTopBuyPrice();
    /**
     * <code>optional int32 top_buy_price = 5;</code>
     */
    int getTopBuyPrice();

    // optional int32 top_sell_price = 6;
    /**
     * <code>optional int32 top_sell_price = 6;</code>
     */
    boolean hasTopSellPrice();
    /**
     * <code>optional int32 top_sell_price = 6;</code>
     */
    int getTopSellPrice();

    // optional int32 trade_price = 7;
    /**
     * <code>optional int32 trade_price = 7;</code>
     */
    boolean hasTradePrice();
    /**
     * <code>optional int32 trade_price = 7;</code>
     */
    int getTradePrice();
  }
  /**
   * Protobuf type {@code oxberrypis.net.proto.rpi.StockEvent}
   */
  public static final class StockEvent extends
      com.google.protobuf.GeneratedMessage
      implements StockEventOrBuilder {
    // Use StockEvent.newBuilder() to construct.
    private StockEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StockEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StockEvent defaultInstance;
    public static StockEvent getDefaultInstance() {
      return defaultInstance;
    }

    public StockEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StockEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      @SuppressWarnings("unused")
	int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              stockId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              piId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              seqNum_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              topBuyPrice_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              topSellPrice_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              tradePrice_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return oxberrypis.net.proto.rpi.Rpi.internal_static_oxberrypis_net_proto_rpi_StockEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return oxberrypis.net.proto.rpi.Rpi.internal_static_oxberrypis_net_proto_rpi_StockEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              oxberrypis.net.proto.rpi.Rpi.StockEvent.class, oxberrypis.net.proto.rpi.Rpi.StockEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<StockEvent> PARSER =
        new com.google.protobuf.AbstractParser<StockEvent>() {
      public StockEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StockEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StockEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 stock_id = 1;
    public static final int STOCK_ID_FIELD_NUMBER = 1;
    private int stockId_;
    /**
     * <code>required int32 stock_id = 1;</code>
     */
    public boolean hasStockId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 stock_id = 1;</code>
     */
    public int getStockId() {
      return stockId_;
    }

    // required int32 timestamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private int timestamp_;
    /**
     * <code>required int32 timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 timestamp = 2;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    // required int32 pi_id = 3;
    public static final int PI_ID_FIELD_NUMBER = 3;
    private int piId_;
    /**
     * <code>required int32 pi_id = 3;</code>
     */
    public boolean hasPiId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 pi_id = 3;</code>
     */
    public int getPiId() {
      return piId_;
    }

    // required int32 seq_num = 4;
    public static final int SEQ_NUM_FIELD_NUMBER = 4;
    private int seqNum_;
    /**
     * <code>required int32 seq_num = 4;</code>
     */
    public boolean hasSeqNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 seq_num = 4;</code>
     */
    public int getSeqNum() {
      return seqNum_;
    }

    // optional int32 top_buy_price = 5;
    public static final int TOP_BUY_PRICE_FIELD_NUMBER = 5;
    private int topBuyPrice_;
    /**
     * <code>optional int32 top_buy_price = 5;</code>
     */
    public boolean hasTopBuyPrice() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 top_buy_price = 5;</code>
     */
    public int getTopBuyPrice() {
      return topBuyPrice_;
    }

    // optional int32 top_sell_price = 6;
    public static final int TOP_SELL_PRICE_FIELD_NUMBER = 6;
    private int topSellPrice_;
    /**
     * <code>optional int32 top_sell_price = 6;</code>
     */
    public boolean hasTopSellPrice() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 top_sell_price = 6;</code>
     */
    public int getTopSellPrice() {
      return topSellPrice_;
    }

    // optional int32 trade_price = 7;
    public static final int TRADE_PRICE_FIELD_NUMBER = 7;
    private int tradePrice_;
    /**
     * <code>optional int32 trade_price = 7;</code>
     */
    public boolean hasTradePrice() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 trade_price = 7;</code>
     */
    public int getTradePrice() {
      return tradePrice_;
    }

    private void initFields() {
      stockId_ = 0;
      timestamp_ = 0;
      piId_ = 0;
      seqNum_ = 0;
      topBuyPrice_ = 0;
      topSellPrice_ = 0;
      tradePrice_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasStockId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPiId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSeqNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, stockId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, piId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, seqNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, topBuyPrice_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, topSellPrice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, tradePrice_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, stockId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, piId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seqNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, topBuyPrice_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, topSellPrice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, tradePrice_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static oxberrypis.net.proto.rpi.Rpi.StockEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static oxberrypis.net.proto.rpi.Rpi.StockEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static oxberrypis.net.proto.rpi.Rpi.StockEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static oxberrypis.net.proto.rpi.Rpi.StockEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static oxberrypis.net.proto.rpi.Rpi.StockEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static oxberrypis.net.proto.rpi.Rpi.StockEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static oxberrypis.net.proto.rpi.Rpi.StockEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static oxberrypis.net.proto.rpi.Rpi.StockEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static oxberrypis.net.proto.rpi.Rpi.StockEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static oxberrypis.net.proto.rpi.Rpi.StockEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(oxberrypis.net.proto.rpi.Rpi.StockEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code oxberrypis.net.proto.rpi.StockEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements oxberrypis.net.proto.rpi.Rpi.StockEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return oxberrypis.net.proto.rpi.Rpi.internal_static_oxberrypis_net_proto_rpi_StockEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return oxberrypis.net.proto.rpi.Rpi.internal_static_oxberrypis_net_proto_rpi_StockEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                oxberrypis.net.proto.rpi.Rpi.StockEvent.class, oxberrypis.net.proto.rpi.Rpi.StockEvent.Builder.class);
      }

      // Construct using oxberrypis.net.proto.rpi.Rpi.StockEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        stockId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        piId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        seqNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        topBuyPrice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        topSellPrice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        tradePrice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return oxberrypis.net.proto.rpi.Rpi.internal_static_oxberrypis_net_proto_rpi_StockEvent_descriptor;
      }

      public oxberrypis.net.proto.rpi.Rpi.StockEvent getDefaultInstanceForType() {
        return oxberrypis.net.proto.rpi.Rpi.StockEvent.getDefaultInstance();
      }

      public oxberrypis.net.proto.rpi.Rpi.StockEvent build() {
        oxberrypis.net.proto.rpi.Rpi.StockEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public oxberrypis.net.proto.rpi.Rpi.StockEvent buildPartial() {
        oxberrypis.net.proto.rpi.Rpi.StockEvent result = new oxberrypis.net.proto.rpi.Rpi.StockEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.stockId_ = stockId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.piId_ = piId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.seqNum_ = seqNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.topBuyPrice_ = topBuyPrice_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.topSellPrice_ = topSellPrice_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tradePrice_ = tradePrice_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof oxberrypis.net.proto.rpi.Rpi.StockEvent) {
          return mergeFrom((oxberrypis.net.proto.rpi.Rpi.StockEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(oxberrypis.net.proto.rpi.Rpi.StockEvent other) {
        if (other == oxberrypis.net.proto.rpi.Rpi.StockEvent.getDefaultInstance()) return this;
        if (other.hasStockId()) {
          setStockId(other.getStockId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasPiId()) {
          setPiId(other.getPiId());
        }
        if (other.hasSeqNum()) {
          setSeqNum(other.getSeqNum());
        }
        if (other.hasTopBuyPrice()) {
          setTopBuyPrice(other.getTopBuyPrice());
        }
        if (other.hasTopSellPrice()) {
          setTopSellPrice(other.getTopSellPrice());
        }
        if (other.hasTradePrice()) {
          setTradePrice(other.getTradePrice());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStockId()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasPiId()) {
          
          return false;
        }
        if (!hasSeqNum()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        oxberrypis.net.proto.rpi.Rpi.StockEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (oxberrypis.net.proto.rpi.Rpi.StockEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 stock_id = 1;
      private int stockId_ ;
      /**
       * <code>required int32 stock_id = 1;</code>
       */
      public boolean hasStockId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 stock_id = 1;</code>
       */
      public int getStockId() {
        return stockId_;
      }
      /**
       * <code>required int32 stock_id = 1;</code>
       */
      public Builder setStockId(int value) {
        bitField0_ |= 0x00000001;
        stockId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 stock_id = 1;</code>
       */
      public Builder clearStockId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        stockId_ = 0;
        onChanged();
        return this;
      }

      // required int32 timestamp = 2;
      private int timestamp_ ;
      /**
       * <code>required int32 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 timestamp = 2;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required int32 timestamp = 2;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      // required int32 pi_id = 3;
      private int piId_ ;
      /**
       * <code>required int32 pi_id = 3;</code>
       */
      public boolean hasPiId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 pi_id = 3;</code>
       */
      public int getPiId() {
        return piId_;
      }
      /**
       * <code>required int32 pi_id = 3;</code>
       */
      public Builder setPiId(int value) {
        bitField0_ |= 0x00000004;
        piId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pi_id = 3;</code>
       */
      public Builder clearPiId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        piId_ = 0;
        onChanged();
        return this;
      }

      // required int32 seq_num = 4;
      private int seqNum_ ;
      /**
       * <code>required int32 seq_num = 4;</code>
       */
      public boolean hasSeqNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 seq_num = 4;</code>
       */
      public int getSeqNum() {
        return seqNum_;
      }
      /**
       * <code>required int32 seq_num = 4;</code>
       */
      public Builder setSeqNum(int value) {
        bitField0_ |= 0x00000008;
        seqNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 seq_num = 4;</code>
       */
      public Builder clearSeqNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seqNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 top_buy_price = 5;
      private int topBuyPrice_ ;
      /**
       * <code>optional int32 top_buy_price = 5;</code>
       */
      public boolean hasTopBuyPrice() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 top_buy_price = 5;</code>
       */
      public int getTopBuyPrice() {
        return topBuyPrice_;
      }
      /**
       * <code>optional int32 top_buy_price = 5;</code>
       */
      public Builder setTopBuyPrice(int value) {
        bitField0_ |= 0x00000010;
        topBuyPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 top_buy_price = 5;</code>
       */
      public Builder clearTopBuyPrice() {
        bitField0_ = (bitField0_ & ~0x00000010);
        topBuyPrice_ = 0;
        onChanged();
        return this;
      }

      // optional int32 top_sell_price = 6;
      private int topSellPrice_ ;
      /**
       * <code>optional int32 top_sell_price = 6;</code>
       */
      public boolean hasTopSellPrice() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 top_sell_price = 6;</code>
       */
      public int getTopSellPrice() {
        return topSellPrice_;
      }
      /**
       * <code>optional int32 top_sell_price = 6;</code>
       */
      public Builder setTopSellPrice(int value) {
        bitField0_ |= 0x00000020;
        topSellPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 top_sell_price = 6;</code>
       */
      public Builder clearTopSellPrice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        topSellPrice_ = 0;
        onChanged();
        return this;
      }

      // optional int32 trade_price = 7;
      private int tradePrice_ ;
      /**
       * <code>optional int32 trade_price = 7;</code>
       */
      public boolean hasTradePrice() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 trade_price = 7;</code>
       */
      public int getTradePrice() {
        return tradePrice_;
      }
      /**
       * <code>optional int32 trade_price = 7;</code>
       */
      public Builder setTradePrice(int value) {
        bitField0_ |= 0x00000040;
        tradePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trade_price = 7;</code>
       */
      public Builder clearTradePrice() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tradePrice_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:oxberrypis.net.proto.rpi.StockEvent)
    }

    static {
      defaultInstance = new StockEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:oxberrypis.net.proto.rpi.StockEvent)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_oxberrypis_net_proto_rpi_StockEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_oxberrypis_net_proto_rpi_StockEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036oxberrypis/net/proto/rpi.proto\022\030oxberr" +
      "ypis.net.proto.rpi\"\225\001\n\nStockEvent\022\020\n\010sto" +
      "ck_id\030\001 \002(\005\022\021\n\ttimestamp\030\002 \002(\005\022\r\n\005pi_id\030" +
      "\003 \002(\005\022\017\n\007seq_num\030\004 \002(\005\022\025\n\rtop_buy_price\030" +
      "\005 \001(\005\022\026\n\016top_sell_price\030\006 \001(\005\022\023\n\013trade_p" +
      "rice\030\007 \001(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_oxberrypis_net_proto_rpi_StockEvent_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_oxberrypis_net_proto_rpi_StockEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_oxberrypis_net_proto_rpi_StockEvent_descriptor,
              new java.lang.String[] { "StockId", "Timestamp", "PiId", "SeqNum", "TopBuyPrice", "TopSellPrice", "TradePrice", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
