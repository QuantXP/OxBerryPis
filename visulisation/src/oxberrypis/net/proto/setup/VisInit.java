// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oxberrypis/net/proto/vis_init.proto

package oxberrypis.net.proto.setup;

public final class VisInit {
  private VisInit() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SetupVisualisationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 denomPower = 1;
    /**
     * <code>required int32 denomPower = 1;</code>
     */
    boolean hasDenomPower();
    /**
     * <code>required int32 denomPower = 1;</code>
     */
    int getDenomPower();

    // repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;
    /**
     * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
     */
    java.util.List<oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn> 
        getSymbolList();
    /**
     * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
     */
    oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn getSymbol(int index);
    /**
     * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
     */
    int getSymbolCount();
    /**
     * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
     */
    java.util.List<? extends oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefnOrBuilder> 
        getSymbolOrBuilderList();
    /**
     * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
     */
    oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefnOrBuilder getSymbolOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code oxberrypis.net.proto.setup.SetupVisualisation}
   */
  public static final class SetupVisualisation extends
      com.google.protobuf.GeneratedMessage
      implements SetupVisualisationOrBuilder {
    // Use SetupVisualisation.newBuilder() to construct.
    private SetupVisualisation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetupVisualisation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetupVisualisation defaultInstance;
    public static SetupVisualisation getDefaultInstance() {
      return defaultInstance;
    }

    public SetupVisualisation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetupVisualisation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              denomPower_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                symbol_ = new java.util.ArrayList<oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn>();
                mutable_bitField0_ |= 0x00000002;
              }
              symbol_.add(input.readMessage(oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          symbol_ = java.util.Collections.unmodifiableList(symbol_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return oxberrypis.net.proto.setup.VisInit.internal_static_oxberrypis_net_proto_setup_SetupVisualisation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return oxberrypis.net.proto.setup.VisInit.internal_static_oxberrypis_net_proto_setup_SetupVisualisation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              oxberrypis.net.proto.setup.VisInit.SetupVisualisation.class, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.Builder.class);
    }

    public static com.google.protobuf.Parser<SetupVisualisation> PARSER =
        new com.google.protobuf.AbstractParser<SetupVisualisation>() {
      public SetupVisualisation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetupVisualisation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetupVisualisation> getParserForType() {
      return PARSER;
    }

    public interface SymbolDefnOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required int32 symbol_id = 1;
      /**
       * <code>required int32 symbol_id = 1;</code>
       */
      boolean hasSymbolId();
      /**
       * <code>required int32 symbol_id = 1;</code>
       */
      int getSymbolId();

      // required string symbol_name = 2;
      /**
       * <code>required string symbol_name = 2;</code>
       */
      boolean hasSymbolName();
      /**
       * <code>required string symbol_name = 2;</code>
       */
      java.lang.String getSymbolName();
      /**
       * <code>required string symbol_name = 2;</code>
       */
      com.google.protobuf.ByteString
          getSymbolNameBytes();

      // required int32 stream_id = 3;
      /**
       * <code>required int32 stream_id = 3;</code>
       *
       * <pre>
       *which file is this symbol from
       * </pre>
       */
      boolean hasStreamId();
      /**
       * <code>required int32 stream_id = 3;</code>
       *
       * <pre>
       *which file is this symbol from
       * </pre>
       */
      int getStreamId();

      // repeated int32 pi_ids = 4;
      /**
       * <code>repeated int32 pi_ids = 4;</code>
       *
       * <pre>
       * which pis have this symbol
       * </pre>
       */
      java.util.List<java.lang.Integer> getPiIdsList();
      /**
       * <code>repeated int32 pi_ids = 4;</code>
       *
       * <pre>
       * which pis have this symbol
       * </pre>
       */
      int getPiIdsCount();
      /**
       * <code>repeated int32 pi_ids = 4;</code>
       *
       * <pre>
       * which pis have this symbol
       * </pre>
       */
      int getPiIds(int index);
    }
    /**
     * Protobuf type {@code oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn}
     */
    public static final class SymbolDefn extends
        com.google.protobuf.GeneratedMessage
        implements SymbolDefnOrBuilder {
      // Use SymbolDefn.newBuilder() to construct.
      private SymbolDefn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SymbolDefn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SymbolDefn defaultInstance;
      public static SymbolDefn getDefaultInstance() {
        return defaultInstance;
      }

      public SymbolDefn getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SymbolDefn(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                symbolId_ = input.readInt32();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                symbolName_ = input.readBytes();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                streamId_ = input.readInt32();
                break;
              }
              case 32: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  piIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000008;
                }
                piIds_.add(input.readInt32());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                  piIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  piIds_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            piIds_ = java.util.Collections.unmodifiableList(piIds_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return oxberrypis.net.proto.setup.VisInit.internal_static_oxberrypis_net_proto_setup_SetupVisualisation_SymbolDefn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return oxberrypis.net.proto.setup.VisInit.internal_static_oxberrypis_net_proto_setup_SetupVisualisation_SymbolDefn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.class, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.Builder.class);
      }

      public static com.google.protobuf.Parser<SymbolDefn> PARSER =
          new com.google.protobuf.AbstractParser<SymbolDefn>() {
        public SymbolDefn parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SymbolDefn(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SymbolDefn> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required int32 symbol_id = 1;
      public static final int SYMBOL_ID_FIELD_NUMBER = 1;
      private int symbolId_;
      /**
       * <code>required int32 symbol_id = 1;</code>
       */
      public boolean hasSymbolId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 symbol_id = 1;</code>
       */
      public int getSymbolId() {
        return symbolId_;
      }

      // required string symbol_name = 2;
      public static final int SYMBOL_NAME_FIELD_NUMBER = 2;
      private java.lang.Object symbolName_;
      /**
       * <code>required string symbol_name = 2;</code>
       */
      public boolean hasSymbolName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string symbol_name = 2;</code>
       */
      public java.lang.String getSymbolName() {
        java.lang.Object ref = symbolName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            symbolName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string symbol_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSymbolNameBytes() {
        java.lang.Object ref = symbolName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbolName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required int32 stream_id = 3;
      public static final int STREAM_ID_FIELD_NUMBER = 3;
      private int streamId_;
      /**
       * <code>required int32 stream_id = 3;</code>
       *
       * <pre>
       *which file is this symbol from
       * </pre>
       */
      public boolean hasStreamId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 stream_id = 3;</code>
       *
       * <pre>
       *which file is this symbol from
       * </pre>
       */
      public int getStreamId() {
        return streamId_;
      }

      // repeated int32 pi_ids = 4;
      public static final int PI_IDS_FIELD_NUMBER = 4;
      private java.util.List<java.lang.Integer> piIds_;
      /**
       * <code>repeated int32 pi_ids = 4;</code>
       *
       * <pre>
       * which pis have this symbol
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPiIdsList() {
        return piIds_;
      }
      /**
       * <code>repeated int32 pi_ids = 4;</code>
       *
       * <pre>
       * which pis have this symbol
       * </pre>
       */
      public int getPiIdsCount() {
        return piIds_.size();
      }
      /**
       * <code>repeated int32 pi_ids = 4;</code>
       *
       * <pre>
       * which pis have this symbol
       * </pre>
       */
      public int getPiIds(int index) {
        return piIds_.get(index);
      }

      private void initFields() {
        symbolId_ = 0;
        symbolName_ = "";
        streamId_ = 0;
        piIds_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasSymbolId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSymbolName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasStreamId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, symbolId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getSymbolNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, streamId_);
        }
        for (int i = 0; i < piIds_.size(); i++) {
          output.writeInt32(4, piIds_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, symbolId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getSymbolNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, streamId_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < piIds_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(piIds_.get(i));
          }
          size += dataSize;
          size += 1 * getPiIdsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefnOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return oxberrypis.net.proto.setup.VisInit.internal_static_oxberrypis_net_proto_setup_SetupVisualisation_SymbolDefn_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return oxberrypis.net.proto.setup.VisInit.internal_static_oxberrypis_net_proto_setup_SetupVisualisation_SymbolDefn_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.class, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.Builder.class);
        }

        // Construct using oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          symbolId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          symbolName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          streamId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          piIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return oxberrypis.net.proto.setup.VisInit.internal_static_oxberrypis_net_proto_setup_SetupVisualisation_SymbolDefn_descriptor;
        }

        public oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn getDefaultInstanceForType() {
          return oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.getDefaultInstance();
        }

        public oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn build() {
          oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn buildPartial() {
          oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn result = new oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.symbolId_ = symbolId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.symbolName_ = symbolName_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.streamId_ = streamId_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            piIds_ = java.util.Collections.unmodifiableList(piIds_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.piIds_ = piIds_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn) {
            return mergeFrom((oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn other) {
          if (other == oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.getDefaultInstance()) return this;
          if (other.hasSymbolId()) {
            setSymbolId(other.getSymbolId());
          }
          if (other.hasSymbolName()) {
            bitField0_ |= 0x00000002;
            symbolName_ = other.symbolName_;
            onChanged();
          }
          if (other.hasStreamId()) {
            setStreamId(other.getStreamId());
          }
          if (!other.piIds_.isEmpty()) {
            if (piIds_.isEmpty()) {
              piIds_ = other.piIds_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePiIdsIsMutable();
              piIds_.addAll(other.piIds_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasSymbolId()) {
            
            return false;
          }
          if (!hasSymbolName()) {
            
            return false;
          }
          if (!hasStreamId()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required int32 symbol_id = 1;
        private int symbolId_ ;
        /**
         * <code>required int32 symbol_id = 1;</code>
         */
        public boolean hasSymbolId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 symbol_id = 1;</code>
         */
        public int getSymbolId() {
          return symbolId_;
        }
        /**
         * <code>required int32 symbol_id = 1;</code>
         */
        public Builder setSymbolId(int value) {
          bitField0_ |= 0x00000001;
          symbolId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 symbol_id = 1;</code>
         */
        public Builder clearSymbolId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          symbolId_ = 0;
          onChanged();
          return this;
        }

        // required string symbol_name = 2;
        private java.lang.Object symbolName_ = "";
        /**
         * <code>required string symbol_name = 2;</code>
         */
        public boolean hasSymbolName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string symbol_name = 2;</code>
         */
        public java.lang.String getSymbolName() {
          java.lang.Object ref = symbolName_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            symbolName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string symbol_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getSymbolNameBytes() {
          java.lang.Object ref = symbolName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            symbolName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string symbol_name = 2;</code>
         */
        public Builder setSymbolName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          symbolName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string symbol_name = 2;</code>
         */
        public Builder clearSymbolName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          symbolName_ = getDefaultInstance().getSymbolName();
          onChanged();
          return this;
        }
        /**
         * <code>required string symbol_name = 2;</code>
         */
        public Builder setSymbolNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          symbolName_ = value;
          onChanged();
          return this;
        }

        // required int32 stream_id = 3;
        private int streamId_ ;
        /**
         * <code>required int32 stream_id = 3;</code>
         *
         * <pre>
         *which file is this symbol from
         * </pre>
         */
        public boolean hasStreamId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required int32 stream_id = 3;</code>
         *
         * <pre>
         *which file is this symbol from
         * </pre>
         */
        public int getStreamId() {
          return streamId_;
        }
        /**
         * <code>required int32 stream_id = 3;</code>
         *
         * <pre>
         *which file is this symbol from
         * </pre>
         */
        public Builder setStreamId(int value) {
          bitField0_ |= 0x00000004;
          streamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 stream_id = 3;</code>
         *
         * <pre>
         *which file is this symbol from
         * </pre>
         */
        public Builder clearStreamId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          streamId_ = 0;
          onChanged();
          return this;
        }

        // repeated int32 pi_ids = 4;
        private java.util.List<java.lang.Integer> piIds_ = java.util.Collections.emptyList();
        private void ensurePiIdsIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            piIds_ = new java.util.ArrayList<java.lang.Integer>(piIds_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated int32 pi_ids = 4;</code>
         *
         * <pre>
         * which pis have this symbol
         * </pre>
         */
        public java.util.List<java.lang.Integer>
            getPiIdsList() {
          return java.util.Collections.unmodifiableList(piIds_);
        }
        /**
         * <code>repeated int32 pi_ids = 4;</code>
         *
         * <pre>
         * which pis have this symbol
         * </pre>
         */
        public int getPiIdsCount() {
          return piIds_.size();
        }
        /**
         * <code>repeated int32 pi_ids = 4;</code>
         *
         * <pre>
         * which pis have this symbol
         * </pre>
         */
        public int getPiIds(int index) {
          return piIds_.get(index);
        }
        /**
         * <code>repeated int32 pi_ids = 4;</code>
         *
         * <pre>
         * which pis have this symbol
         * </pre>
         */
        public Builder setPiIds(
            int index, int value) {
          ensurePiIdsIsMutable();
          piIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 pi_ids = 4;</code>
         *
         * <pre>
         * which pis have this symbol
         * </pre>
         */
        public Builder addPiIds(int value) {
          ensurePiIdsIsMutable();
          piIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 pi_ids = 4;</code>
         *
         * <pre>
         * which pis have this symbol
         * </pre>
         */
        public Builder addAllPiIds(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensurePiIdsIsMutable();
          super.addAll(values, piIds_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 pi_ids = 4;</code>
         *
         * <pre>
         * which pis have this symbol
         * </pre>
         */
        public Builder clearPiIds() {
          piIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn)
      }

      static {
        defaultInstance = new SymbolDefn(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn)
    }

    private int bitField0_;
    // required int32 denomPower = 1;
    public static final int DENOMPOWER_FIELD_NUMBER = 1;
    private int denomPower_;
    /**
     * <code>required int32 denomPower = 1;</code>
     */
    public boolean hasDenomPower() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 denomPower = 1;</code>
     */
    public int getDenomPower() {
      return denomPower_;
    }

    // repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;
    public static final int SYMBOL_FIELD_NUMBER = 2;
    private java.util.List<oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn> symbol_;
    /**
     * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
     */
    public java.util.List<oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn> getSymbolList() {
      return symbol_;
    }
    /**
     * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
     */
    public java.util.List<? extends oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefnOrBuilder> 
        getSymbolOrBuilderList() {
      return symbol_;
    }
    /**
     * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
     */
    public int getSymbolCount() {
      return symbol_.size();
    }
    /**
     * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
     */
    public oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn getSymbol(int index) {
      return symbol_.get(index);
    }
    /**
     * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
     */
    public oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefnOrBuilder getSymbolOrBuilder(
        int index) {
      return symbol_.get(index);
    }

    private void initFields() {
      denomPower_ = 0;
      symbol_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDenomPower()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSymbolCount(); i++) {
        if (!getSymbol(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, denomPower_);
      }
      for (int i = 0; i < symbol_.size(); i++) {
        output.writeMessage(2, symbol_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, denomPower_);
      }
      for (int i = 0; i < symbol_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, symbol_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static oxberrypis.net.proto.setup.VisInit.SetupVisualisation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(oxberrypis.net.proto.setup.VisInit.SetupVisualisation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code oxberrypis.net.proto.setup.SetupVisualisation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements oxberrypis.net.proto.setup.VisInit.SetupVisualisationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return oxberrypis.net.proto.setup.VisInit.internal_static_oxberrypis_net_proto_setup_SetupVisualisation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return oxberrypis.net.proto.setup.VisInit.internal_static_oxberrypis_net_proto_setup_SetupVisualisation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                oxberrypis.net.proto.setup.VisInit.SetupVisualisation.class, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.Builder.class);
      }

      // Construct using oxberrypis.net.proto.setup.VisInit.SetupVisualisation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSymbolFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        denomPower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (symbolBuilder_ == null) {
          symbol_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          symbolBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return oxberrypis.net.proto.setup.VisInit.internal_static_oxberrypis_net_proto_setup_SetupVisualisation_descriptor;
      }

      public oxberrypis.net.proto.setup.VisInit.SetupVisualisation getDefaultInstanceForType() {
        return oxberrypis.net.proto.setup.VisInit.SetupVisualisation.getDefaultInstance();
      }

      public oxberrypis.net.proto.setup.VisInit.SetupVisualisation build() {
        oxberrypis.net.proto.setup.VisInit.SetupVisualisation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public oxberrypis.net.proto.setup.VisInit.SetupVisualisation buildPartial() {
        oxberrypis.net.proto.setup.VisInit.SetupVisualisation result = new oxberrypis.net.proto.setup.VisInit.SetupVisualisation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.denomPower_ = denomPower_;
        if (symbolBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            symbol_ = java.util.Collections.unmodifiableList(symbol_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.symbol_ = symbol_;
        } else {
          result.symbol_ = symbolBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof oxberrypis.net.proto.setup.VisInit.SetupVisualisation) {
          return mergeFrom((oxberrypis.net.proto.setup.VisInit.SetupVisualisation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(oxberrypis.net.proto.setup.VisInit.SetupVisualisation other) {
        if (other == oxberrypis.net.proto.setup.VisInit.SetupVisualisation.getDefaultInstance()) return this;
        if (other.hasDenomPower()) {
          setDenomPower(other.getDenomPower());
        }
        if (symbolBuilder_ == null) {
          if (!other.symbol_.isEmpty()) {
            if (symbol_.isEmpty()) {
              symbol_ = other.symbol_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSymbolIsMutable();
              symbol_.addAll(other.symbol_);
            }
            onChanged();
          }
        } else {
          if (!other.symbol_.isEmpty()) {
            if (symbolBuilder_.isEmpty()) {
              symbolBuilder_.dispose();
              symbolBuilder_ = null;
              symbol_ = other.symbol_;
              bitField0_ = (bitField0_ & ~0x00000002);
              symbolBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSymbolFieldBuilder() : null;
            } else {
              symbolBuilder_.addAllMessages(other.symbol_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDenomPower()) {
          
          return false;
        }
        for (int i = 0; i < getSymbolCount(); i++) {
          if (!getSymbol(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        oxberrypis.net.proto.setup.VisInit.SetupVisualisation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (oxberrypis.net.proto.setup.VisInit.SetupVisualisation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 denomPower = 1;
      private int denomPower_ ;
      /**
       * <code>required int32 denomPower = 1;</code>
       */
      public boolean hasDenomPower() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 denomPower = 1;</code>
       */
      public int getDenomPower() {
        return denomPower_;
      }
      /**
       * <code>required int32 denomPower = 1;</code>
       */
      public Builder setDenomPower(int value) {
        bitField0_ |= 0x00000001;
        denomPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 denomPower = 1;</code>
       */
      public Builder clearDenomPower() {
        bitField0_ = (bitField0_ & ~0x00000001);
        denomPower_ = 0;
        onChanged();
        return this;
      }

      // repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;
      private java.util.List<oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn> symbol_ =
        java.util.Collections.emptyList();
      private void ensureSymbolIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          symbol_ = new java.util.ArrayList<oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn>(symbol_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.Builder, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefnOrBuilder> symbolBuilder_;

      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public java.util.List<oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn> getSymbolList() {
        if (symbolBuilder_ == null) {
          return java.util.Collections.unmodifiableList(symbol_);
        } else {
          return symbolBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public int getSymbolCount() {
        if (symbolBuilder_ == null) {
          return symbol_.size();
        } else {
          return symbolBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn getSymbol(int index) {
        if (symbolBuilder_ == null) {
          return symbol_.get(index);
        } else {
          return symbolBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public Builder setSymbol(
          int index, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn value) {
        if (symbolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolIsMutable();
          symbol_.set(index, value);
          onChanged();
        } else {
          symbolBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public Builder setSymbol(
          int index, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.Builder builderForValue) {
        if (symbolBuilder_ == null) {
          ensureSymbolIsMutable();
          symbol_.set(index, builderForValue.build());
          onChanged();
        } else {
          symbolBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public Builder addSymbol(oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn value) {
        if (symbolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolIsMutable();
          symbol_.add(value);
          onChanged();
        } else {
          symbolBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public Builder addSymbol(
          int index, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn value) {
        if (symbolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolIsMutable();
          symbol_.add(index, value);
          onChanged();
        } else {
          symbolBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public Builder addSymbol(
          oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.Builder builderForValue) {
        if (symbolBuilder_ == null) {
          ensureSymbolIsMutable();
          symbol_.add(builderForValue.build());
          onChanged();
        } else {
          symbolBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public Builder addSymbol(
          int index, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.Builder builderForValue) {
        if (symbolBuilder_ == null) {
          ensureSymbolIsMutable();
          symbol_.add(index, builderForValue.build());
          onChanged();
        } else {
          symbolBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public Builder addAllSymbol(
          java.lang.Iterable<? extends oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn> values) {
        if (symbolBuilder_ == null) {
          ensureSymbolIsMutable();
          super.addAll(values, symbol_);
          onChanged();
        } else {
          symbolBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public Builder clearSymbol() {
        if (symbolBuilder_ == null) {
          symbol_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          symbolBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public Builder removeSymbol(int index) {
        if (symbolBuilder_ == null) {
          ensureSymbolIsMutable();
          symbol_.remove(index);
          onChanged();
        } else {
          symbolBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.Builder getSymbolBuilder(
          int index) {
        return getSymbolFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefnOrBuilder getSymbolOrBuilder(
          int index) {
        if (symbolBuilder_ == null) {
          return symbol_.get(index);  } else {
          return symbolBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public java.util.List<? extends oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefnOrBuilder> 
           getSymbolOrBuilderList() {
        if (symbolBuilder_ != null) {
          return symbolBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(symbol_);
        }
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.Builder addSymbolBuilder() {
        return getSymbolFieldBuilder().addBuilder(
            oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.getDefaultInstance());
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.Builder addSymbolBuilder(
          int index) {
        return getSymbolFieldBuilder().addBuilder(
            index, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.getDefaultInstance());
      }
      /**
       * <code>repeated .oxberrypis.net.proto.setup.SetupVisualisation.SymbolDefn symbol = 2;</code>
       */
      public java.util.List<oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.Builder> 
           getSymbolBuilderList() {
        return getSymbolFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.Builder, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefnOrBuilder> 
          getSymbolFieldBuilder() {
        if (symbolBuilder_ == null) {
          symbolBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefn.Builder, oxberrypis.net.proto.setup.VisInit.SetupVisualisation.SymbolDefnOrBuilder>(
                  symbol_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          symbol_ = null;
        }
        return symbolBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:oxberrypis.net.proto.setup.SetupVisualisation)
    }

    static {
      defaultInstance = new SetupVisualisation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:oxberrypis.net.proto.setup.SetupVisualisation)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_oxberrypis_net_proto_setup_SetupVisualisation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_oxberrypis_net_proto_setup_SetupVisualisation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_oxberrypis_net_proto_setup_SetupVisualisation_SymbolDefn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_oxberrypis_net_proto_setup_SetupVisualisation_SymbolDefn_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#oxberrypis/net/proto/vis_init.proto\022\032o" +
      "xberrypis.net.proto.setup\"\314\001\n\022SetupVisua" +
      "lisation\022\022\n\ndenomPower\030\001 \002(\005\022I\n\006symbol\030\002" +
      " \003(\01329.oxberrypis.net.proto.setup.SetupV" +
      "isualisation.SymbolDefn\032W\n\nSymbolDefn\022\021\n" +
      "\tsymbol_id\030\001 \002(\005\022\023\n\013symbol_name\030\002 \002(\t\022\021\n" +
      "\tstream_id\030\003 \002(\005\022\016\n\006pi_ids\030\004 \003(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_oxberrypis_net_proto_setup_SetupVisualisation_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_oxberrypis_net_proto_setup_SetupVisualisation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_oxberrypis_net_proto_setup_SetupVisualisation_descriptor,
              new java.lang.String[] { "DenomPower", "Symbol", });
          internal_static_oxberrypis_net_proto_setup_SetupVisualisation_SymbolDefn_descriptor =
            internal_static_oxberrypis_net_proto_setup_SetupVisualisation_descriptor.getNestedTypes().get(0);
          internal_static_oxberrypis_net_proto_setup_SetupVisualisation_SymbolDefn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_oxberrypis_net_proto_setup_SetupVisualisation_SymbolDefn_descriptor,
              new java.lang.String[] { "SymbolId", "SymbolName", "StreamId", "PiIds", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
